name: CodeFixer CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 0'  # Weekly security scan

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        shell: [bash, zsh]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up shell
      run: |
        if [ "${{ matrix.shell }}" = "zsh" ]; then
          echo "SHELL=/bin/zsh" >> $GITHUB_ENV
        fi
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck jq yamllint
        pip install pylint black isort mypy
        npm install -g eslint prettier
    
    - name: Run tests
      run: |
        chmod +x tests/test_runner.sh
        ./tests/test_runner.sh
    
    - name: Run security scan
      run: |
        chmod +x codefixer.sh
        ./codefixer.sh --dry-run --report .
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.shell }}
        path: |
          ~/.codefixer/logs/
          tests/output/

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security audit
      run: |
        chmod +x codefixer.sh
        ./codefixer.sh --dry-run --report .
    
    - name: Check for vulnerabilities
      run: |
        # Check for common security issues
        grep -r "eval\|exec\|system" . --include="*.sh" || true
        grep -r "sudo\|su" . --include="*.sh" || true
    
    - name: Upload security report
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: ~/.codefixer/logs/security.log

  performance:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck jq yamllint
        pip install pylint black isort mypy
        npm install -g eslint prettier
    
    - name: Performance test
      run: |
        chmod +x codefixer.sh
        time ./codefixer.sh --dry-run --jobs 8 .
    
    - name: Memory test
      run: |
        chmod +x codefixer.sh
        valgrind --tool=memcheck --leak-check=full ./codefixer.sh --dry-run . || true

  build:
    runs-on: ubuntu-latest
    needs: [test, security, performance]
    steps:
    - uses: actions/checkout@v4
    
    - name: Create release package
      run: |
        mkdir -p release
        cp codefixer.sh release/
        cp -r lib/ release/
        cp -r tests/ release/
        cp README*.md release/
        cp LICENSE* release/
        cp config*.yaml release/
        cp *.txt release/
        tar -czf codefixer-v6.0.0.tar.gz -C release .
    
    - name: Upload release
      uses: actions/upload-artifact@v4
      with:
        name: codefixer-release
        path: codefixer-v6.0.0.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Download release
      uses: actions/download-artifact@v4
      with:
        name: codefixer-release
    
    - name: Deploy to production
      run: |
        echo "Deploying to production..."
        # Add deployment logic here